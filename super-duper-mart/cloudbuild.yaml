# cloudbuild.yaml
steps:
  # 1. 依存関係のインストール (pnpm install)
  # Node.js イメージを使い、pnpm をインストールしてから依存関係をインストール
  - name: 'node:20-slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm install -g pnpm@latest # pnpm をインストール
        pnpm install --frozen-lockfile
    id: 'pnpm install'

  # 2. フロントエンドのビルド
  - name: 'node:20-slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm install -g pnpm@latest # pnpm をインストール
        pnpm --filter frontend build
    id: 'build frontend'

  # 3. バックエンドのビルド
  - name: 'node:20-slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm install -g pnpm@latest # pnpm をインストール
        pnpm --filter backend build
    id: 'build backend'

  # 4. Docker イメージのビルド
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/super-duper-mart-repo/super-duper-mart-app:latest'
      - '.' # Dockerfile がプロジェクトルートにあることを示します
    id: 'build docker image'

  # 5. Docker イメージを Artifact Registry にプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/super-duper-mart-repo/super-duper-mart-app:latest'
    id: 'push docker image'

  # 6. Cloud Run にデプロイ
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'super-duper-mart-service' # Cloud Run サービス名 (任意の名前)
      - '--image'
      - 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/super-duper-mart-repo/super-duper-mart-app:latest'
      - '--region'
      - 'asia-northeast1' # リージョンを asia-northeast1 に戻します
      - '--allow-unauthenticated' # 最初のデプロイ時は認証なしで公開 (IAPで制限するため)
      - '--platform'
      - 'managed'
      - '--port'
      - '8080'
    id: 'deploy to cloud run'

options:
  logging: CLOUD_LOGGING_ONLY

images:
  - 'asia-northeast1-docker.pkg.dev/${PROJECT_ID}/super-duper-mart-repo/super-duper-mart-app:latest'
  